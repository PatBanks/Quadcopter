#include <Servo.h> 
 
Servo myservo;
 
int pos = 0;                         // speed of motor
int upbuttonstate = 0;               // up button state
int downbuttonstate = 0;             // down button state
int up = 0;
int down = 0;
 
void setup() 
{ 
  Serial.begin(9600);
  myservo.attach(9);                 // motor servo
  pinMode(7, INPUT);                 // motor speed up button (connect to pin 7)
  pinMode(8, INPUT);                 // motor speed down button (connect to pin 8)
  
} 
 
 
void loop() 
{ 
if (pos <= 35) {                      // initializes motor or recovers it if slowed
  for(pos = 0; pos < 40; pos += 5)    // down too much.
    {
      myservo.write(pos);
      delay(1000);
    }}
if (pos > 169)                       // upper limit (in my experience it fails at 170 most
  pos = 169;                         // of the time.
upbuttonstate = digitalRead(7);
downbuttonstate = digitalRead(8);
if (upbuttonstate == 1)              // I used two variables (up/down) to make it so that
  up += 1;                           // it requires 10 'loop' cycles of holding the button
if (downbuttonstate == 1)            // to change the speed variable. I'm not sure if there
  down += 1;                         // is a more efficient way of doing this.
if (up == 10) {
  pos += 1;
  up = 0; }
if (down == 10) {
    pos -= 1;
    down = 0;
  }
myservo.write(pos);                  // Writes new motor speed.
Serial.println(pos);                 // Print Motor speed to serial monitor.
}
